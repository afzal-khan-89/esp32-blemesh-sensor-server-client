[1/13] Linking C static library esp-idf/example_init/libexample_init.a
[2/13] Linking C static library esp-idf/button/libbutton.a
[3/13] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/13] Performing build step for 'bootloader'
[1/1] cd /home/ahkhan/esp/projects/ble_mesh_sensor_model/sensor_client/build/bootloader/esp-idf/esptool_py && /home/ahkhan/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/ahkhan/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/ahkhan/esp/projects/ble_mesh_sensor_model/sensor_client/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/sensor_client.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable sensor_client.elf
[10/11] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /home/ahkhan/esp/projects/ble_mesh_sensor_model/sensor_client/build/sensor_client.bin
[11/11] cd /home/ahkhan/esp/projects/ble_mesh_sensor_model/sensor_client/build/esp-idf/esptool_py && /home/ahkhan/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/ahkhan/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ahkhan/esp/projects/ble_mesh_sensor_model/sensor_client/build/partition_table/partition-table.bin /home/ahkhan/esp/projects/ble_mesh_sensor_model/sensor_client/build/sensor_client.bin
sensor_client.bin binary size 0xf2ca0 bytes. Smallest app partition is 0x100000 bytes. 0xd360 bytes (5%) free.
